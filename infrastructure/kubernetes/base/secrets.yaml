# Copyright (c) Core. All Rights Reserved.
# Licensed under the MIT License. See LICENSE in the project root for license information.

apiVersion: v1
kind: Secret
metadata:
  name: core-secrets
  namespace: core
type: Opaque
stringData:
  # Database connection (using AWS RDS)
  ConnectionStrings__DefaultConnection: "Host=rds-endpoint.region.rds.amazonaws.com;Database=CoreDb;Username=postgres;Password=REPLACE_ME"
  
  # Redis connection (using AWS ElastiCache)
  Redis__Configuration: "redis-endpoint.cache.amazonaws.com:6379"
  
  # Authentication
  JWT__SecretKey: "REPLACE_WITH_STRONG_SECRET_KEY"
  JWT__Issuer: "https://api.example.com"
  JWT__Audience: "https://app.example.com"
  JWT__ExpiryMinutes: "60"
  
  # Google OAuth
  Authentication__Google__ClientId: "REPLACE_ME"
  Authentication__Google__ClientSecret: "REPLACE_ME"
  
  # Stripe
  Stripe__SecretKey: "sk_live_REPLACE_ME"
  Stripe__PublishableKey: "pk_live_REPLACE_ME"
  Stripe__WebhookSecret: "whsec_REPLACE_ME"
  
  # Elasticsearch (if using AWS OpenSearch)
  Elasticsearch__Username: "admin"
  Elasticsearch__Password: "REPLACE_ME"
  
  # Kafka (if using AWS MSK with SASL)
  Kafka__SecurityProtocol: "SASL_SSL"
  Kafka__SaslMechanism: "SCRAM-SHA-512"
  Kafka__SaslUsername: "admin"
  Kafka__SaslPassword: "REPLACE_ME"
---
apiVersion: v1
kind: Secret
metadata:
  name: core-tls
  namespace: core
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key
  # Generated via: kubectl create secret tls core-tls --cert=cert.pem --key=key.pem
  tls.crt: LS0tLS1CRUdJTi...
  tls.key: LS0tLS1CRUdJTi...

