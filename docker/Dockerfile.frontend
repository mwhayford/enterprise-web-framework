# Build stage
FROM node:20-alpine AS build
WORKDIR /app

# Copy package files
COPY src/frontend/package*.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY src/frontend/ ./

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine AS runtime

# Copy built application
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Create nginx directories and set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /run && \
    chown -R nextjs:nodejs /usr/share/nginx/html && \
    chown -R nextjs:nodejs /var/cache/nginx && \
    chown -R nextjs:nodejs /var/log/nginx && \
    chown -R nextjs:nodejs /etc/nginx/conf.d && \
    chown -R nextjs:nodejs /run

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1

# Start nginx (run as non-root, listening on port 3000)
CMD ["nginx", "-g", "daemon off;", "-c", "/etc/nginx/nginx.conf"]
