# Build stage
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files
COPY src/backend/Core.sln ./
COPY src/backend/Core.Domain/Core.Domain.csproj ./Core.Domain/
COPY src/backend/Core.Application/Core.Application.csproj ./Core.Application/
COPY src/backend/Core.Infrastructure/Core.Infrastructure.csproj ./Core.Infrastructure/
COPY src/backend/Core.API/Core.API.csproj ./Core.API/

# Restore dependencies
RUN dotnet restore

# Copy source code
COPY src/backend/ ./

# Build the application
RUN dotnet build -c Release -o /app/build

# Publish stage
FROM build AS publish
RUN dotnet publish Core.API/Core.API.csproj -c Release -o /app/publish

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser && chown -R appuser /app
USER appuser

# Copy published application
COPY --from=publish /app/publish .

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start the application
ENTRYPOINT ["dotnet", "Core.API.dll"]
