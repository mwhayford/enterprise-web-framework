version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: core-postgres
    environment:
      POSTGRES_DB: CoreDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - core-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: core-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - core-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: core-backend
    ports:
      - "5111:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=CoreDb;Username=postgres;Password=password
      - Jwt__Key=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - Jwt__Issuer=Core.API
      - Jwt__Audience=Core.API.Users
      - Google__ClientId=your-google-client-id
      - Google__ClientSecret=your-google-client-secret
      - Stripe__SecretKey=sk_test_your_stripe_secret_key
      - Stripe__PublishableKey=pk_test_your_stripe_publishable_key
      - Frontend__BaseUrl=http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - core-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: core-frontend
    ports:
      - "3001:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:5111/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - core-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  core-network:
    driver: bridge
